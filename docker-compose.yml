version: "3"
services: 
    proxy:
        image: timemanagementregistry.azurecr.io/time-management-proxy:latest
        build: 
            context: ./Proxy
            dockerfile: Dockerfile
        ports: 
            - "8080:8080"
        restart: always    
    db:
        image: mysql:latest
        # command: '--default-authentication-plugin=mysql_native_password'
        restart: unless-stopped
        container_name: timeManagement-DB
        healthcheck:
            test: ['CMD-SHELL', 'mysqladmin ping -h localhost --password="verysecretpassword" --silent']
            interval: 3s
            retries: 5
            start_period: 30s
        volumes:
            - db-data:/var/lib/mysql
        environment:
            - MYSQL_USER=user
            - MYSQL_DATABASE=TimeManagement
            - MYSQL_PASSWORD=verysecretpassword
            - MYSQL_ROOT_PASSWORD=verysecretpassword
        #networks:
        #    - backend-net
        ports:
        - "3306:3306"
        expose:
            - 3306
    client:
        image: timemanagementregistry.azurecr.io/time-management-client:latest
        container_name: timeManagement-UI
        build:
            context: ./Angular-ClientApp
            dockerfile: Dockerfile
        #networks:
        #    - frontent-net
        ports: 
            - "5200:8080"
    api:
        # depends_on: 
        #     db:
        #         condition: service_healthy
        image: timemanagementregistry.azurecr.io/time-management-api:latest
        container_name: timeManagement-API
        build: 
            context: ./time-management-API
            dockerfile: Dockerfile
        #environment:
        #   - ASPNETCORE_ENVIRONMENT=Development
        #   - ASPNETCORE_URLS=https://+:5100;
        #networks:
        #    - backend-net
        #    - frontent-net
        ports: 
            - "5100:8080"

#volumes:
#    db-data:

#Azure Volumes
volumes:
    db-data:
        driver: azure_file
        driver_opts:
            share_name: mydbdata
            storage_account_name: timemanagementvolume

#networks:
#    backend-net:
#        driver: bridge
#    frontent-net:
#        driver: bridge